import { PassbaseConfiguration } from "./configuration";
import { Identity } from "./models/Identity";
import { ProjectSettings } from "./models/ProjectSettings";
import { Resource } from "./models/Resource";
export declare class PassbaseClient {
    config: PassbaseConfiguration;
    constructor(config: PassbaseConfiguration);
    private fetchPassbaseAPI;
    private getPaginatedData;
    /**
     * List authorized identities
     */
    listIdentities(): Promise<Identity[]>;
    /**
     * Get identity
     */
    getIdentityById(identityId: string): Promise<Identity>;
    /**
     *
     * @deprecated Use {getIdentityById} instead
     */
    getIdentity(identityId: string): Promise<Identity>;
    /**
     * List identity resources
     */
    listIdentityResources(identityId: string): Promise<Resource[]>;
    /**
     * Get resource
     */
    getIdentityResourceById(identityId: string, resourceId: string): Promise<Resource>;
    /**
     * Get resource
     */
    getIdentityResourceFileById(identityId: string, resourceId: string, resourceFileId: string): Promise<Blob>;
    /**
     * Get project settings
     */
    getSettings(): Promise<ProjectSettings>;
    /**
     *
     * @deprecated Use {getSettings} instead
     */
    getProjectSettings(): Promise<ProjectSettings>;
}
